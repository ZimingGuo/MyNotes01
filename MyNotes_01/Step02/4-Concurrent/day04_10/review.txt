Review:

1)进程间通信
       * 管道  Pipe()   fd.send()发送  fd.recv()接收
       * 消息队列  Queue() q.get()获取消息  q.put()写入消息
       * 共享内存  Value()但一值  Array()一组值     效率比较高，但是只能传递很少的数据
       * 信号量 ： Semaphore()  acquire()消耗一个信号量  release()增加/恢复一个信号量


2)threading 创建线程
    Thread()  创建线程对象
    start()  启动线程
    join()  回收线程
一个线程的退出不会影响到其他线程，但是如果在一个线程里面调用 exit，那么整个进程都会推出
在线程里面修改一个全局变量，那么这个其他线程都会直接用这个新的变量值


3）线程属性


4）自定义的线程类：继承 Thread ；重写__init__ ；run
当事件比较复杂的时候，用一个函数来封装比较捉襟见肘的时候，就可以用自定义的线程类来封装


5）线程的同步 & 互斥：其实说白了就是加阻塞，通过阻塞来影响我们多个线程对共享量的操作顺序，以此满足逻辑需求。

    同步 & 互斥方法：
    Event()  wait()  set()  clear()
    Lock()  acquire()  release()

    死锁：由于上锁造成的程序阻塞

