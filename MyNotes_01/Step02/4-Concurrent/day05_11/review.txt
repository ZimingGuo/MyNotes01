review:

1）GIL 全局解释器锁：
    给解释器加锁，再解释线程时，同一时刻只能解释一个线程，导致 python 线程效率低。
    因此：在该延迟，高阻塞的情况下适合用 python 中的线程方式，因为此时 python 可以让出解释器来解释其他的线程。
    在无阻塞的IO程序中，多线程的效率还不如单线程线率高
    GIL这个问题只是针对 python 中的C解释器来说的

2）进程 & 线程之间的区别
    是什么 联系&区别 怎么用
    进程的创建和删除所消耗的资源比较多
    线程消耗资源少，但是存在GIL的问题，效率比较低下

3）并发模型
    IO并发
    多进程 & 多线程并发：每当有一个新的客户端连接进来，我就为他创建一个新的线程 or 进程去处理客户端任务
