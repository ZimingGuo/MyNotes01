review:
1. IO 并发：在服务端可以同时处理多个客户端的 IO 请求，多个 IO 都在同时的被执行操作处理。

2. IO 模型：IO 通信的不同模式，是一种模式。
    阻塞IO ；非阻塞IO ；IO多路复用

    阻塞IO：一种默认行为，因为很简单；效率低，但是逻辑简单（遇到阻塞函数 or 传输中的速度比较慢）

    非阻塞IO：通过对属性的修改，把原来阻塞的IO变成了非阻塞的IO。
    IO多路复用：将IO变为非阻塞状态。（sockfd.setblocking(bool) & sockfd.settimeout(sec)）

3. IO多路复用
    利用计算机内核帮助我们同时监控多个 IO 行为，哪一个 IO 就绪了，就进行返回
    1）select：支持 Windows Linux Unix
               缺点：效率相对 epoll 一般，最多监控1024个IO
    2）poll：支持 Linux Unix，支持同步监控更多的IO
             缺点：相对 epoll 效率一般般
    3）epoll：优点：效率高，有更多的触发方式
              缺点：只支持 Linux

4. 协程：小的程序组件（程序的一部分），就像是一个函数在 python 中。
        允许在任何一个地方跳出，并再回来继续执行。
        在应用层通过函数的暂停和跳转实现多个任务之间的切换执行。
        其中每个函数，都可以从任意位置暂停跳出，并继续执行。
        很重要的一个关键字是：yield

        协程特点：本质是单线程，无法使用多核资源，即 在同一时刻必然是只有一个任务在执行，只是在应用层逐个切换
                开销很小，节省资源，新兴的研究方向